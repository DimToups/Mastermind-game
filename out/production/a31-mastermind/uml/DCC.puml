@startuml
skinparam classAttributeIconSize 0

package src{
    package model{
        package enums{
            enum Couleur{
                ..Values..
                ABSENT
                BLEU
                JAUNE
                ROUGE
                VERT
                ORANGE
                VIOLET
                TURQUOISE
                ROSE
                ..Mehtods..
                + getVraiesCouleurs() : Couleur[] {static}
            }
            enum Indice{
                ..Values..
                Bien_PLACE
                MAL_PLACE
                ABSENT
            }
        }
        class Combinaison{
            ..Fields..
            tailleCombi : Integer
            ..Methods..
            + <<create>> Combinaison(tailleCombi : Integer)
            + genererCombinaison(taille : Integer) : Combinaison {static}
            + getCombinaison() : Couleur[]
            + setCouleur(index : Integer, couleur : Couleur)
            + getTailleCombinaison() : Integer
            + estComplet() : Boolean
        }
        class Joueur{
            ..Fields..
            - nom : String
            - score : Integer[]
            ..Methods..
            + <<create>> Joueur(nom : String)
            + getNom() : String
            + getScores() : Integer[]
            + ajouterScorePartie(score : Integer)
        }
        class LigneIndice{
            ..Fields..
            - tailleCombi : Integer
            ..Methods..
            + <<create>> LigneIndice(tailleCombi : Integer)
            + getTailleCombinaison() : Integer
            + getIntIndices() : Integer[]
            + getIndices() : Indice[]
            + calculerScore() : Integer
        }
        class Manche{
            ..Fields..
            - tentativeActuelle : Integer
            - nbTentatives : Integer
            ..Methods..
            + <<create>> Manche(tailleCombi : Integer, nbTentatives : Integer, modeJeu : ModeJeu)
            + jouerManche()
            + calculerScore() : Integer
            + getCombinaisonSecrete() : Combinaison
            + getNbTentative() : Integer
            + getTentativeActuelle() : Integer
            + GetTentatives() : Tentative[]
        }
        interface ModeJeu <<interface>>{
            ..Methods..
            afficherIndices(ligne : LigneIndice)
        }
        class Partie{
            ..Fields..
            - score : Integer
            ..Methods..
            + <<create>> Partie(joueur : Joueur, nbManche : Integer, tailleCombi : Integer, nbTentatives : Integer, modeJeu : ModeJeu)
            + lancerPartie()
            + getManches() : Manche[]
            + finirPartie()
        }
        class Tentative{
            ..Methods..
            + <<create>> Tentative(taille : Integer, modeJeu : ModeJeu)
            + lancerTentative()
            + ajoutCouleur(index : Integer, couleur : Couleur)
            + evaluerTentative(combinaisonSecrete : Combinaison) : Boolean
            + getCombinaisonEntree() : Combinaison
            + getLigneIndice() : LigneIndice
            + calculBonus() : Integer
            + calculerScore() : Integer
        }
        interface MastermindObserver <<interface>>{
            ..Methods..
            + miseEnPlacePlateau()
            + reagirChangementCouleur(index : Integer)
            + reagirFinTentative(indices : Indices)
            + creerJoueur() : Joueur
            + deciderNbManches() : Integer
            + deciderTailleCombinaison() : Integer
            + deciderNbTentatives() : Integer
            + deciderModeJeu() : ModeJeu
        }
    }
    package view{
        class Classique{
            ..Methods..
            afficherIndices(ligne : LigneIndice)
        }
        class Facile{
            ..Methods..
            afficherIndices(ligne : LigneIndice)
        }
        class Numerique{
            ..Methods..
            afficherIndices(ligne : LigneIndice)
        }
        class AffichageConsole{
            ..Fields..
            - tailleCombi : Integer
            - nbTentatives : Integer
            - tentativeActuelle : Integer
            ..Methods..
            + <<create>> FenetreJeu(tailleCombi : Integer, nbTentatives : Integer)
            + miseEnPlacePlateau()
            + reagirChangementCouleur(index : Integer)
            + reagirFinTentative(indices : Indices)
            + creerJoueur() : Joueur
            + deciderNbManche() : Integer
            + deciderTailleCombinaison() : Integer
            + deciderNbTentatives() : Integer
            + deciderModeJeu() : ModeJeu
        }
        class FenetreJeu{
            ..Fields..
            - tailleCombi : Integer
            - nbTentatives : Integer
            - tentativeActuelle : Integer
            ..Methods..
            + <<create>> FenetreJeu(tailleCombi : Integer, nbTentatives : Integer)
            + miseEnPlacePlateau()
            + reagirChangementCouleur(index : Integer)
            + reagirFinTentative(indices : Indices)
            - creerJoueur() : Joueur
            - getNbManche() : Integer
            - getTailleCombinaison() : Integer
            - getNbTentatives() : Integer
            - getModeJeu() : ModeJeu
        }
    }
    package controller{
        class GestionnaireJeu{
            ..Methods..
            + demarrerPartie()
            - creerJoueur() : Joueur
            - getNbManche() : Integer
            - getTailleCombinaison() : Integer
            - getNbTentatives() : Integer
            - getModeJeu() : ModeJeu
        }
    }
}

src.controller.GestionnaireJeu ..> src.model.Partie : <<utilises>>


src.model.Combinaison "1" o--> "4..6" src.model.enums.Couleur

src.model.LigneIndice "1" o--> "4..6" src.model.enums.Indice

src.model.Manche "1" o--> "10..12" src.model.Tentative
src.model.Manche "1" o--> "1" src.model.Combinaison

src.model.ModeJeu ...> src.model.LigneIndice : <<utilises>>
src.model.ModeJeu <|.. src.view.Classique
src.model.ModeJeu <|.. src.view.Facile
src.model.ModeJeu <|.. src.view.Numerique

src.model.Partie "1" o-> "1" src.model.Joueur
src.model.Partie "1" o--> "3..5" src.model.Manche
src.model.Partie .> src.model.ModeJeu

src.model.Tentative "1" o--> "1" src.model.Combinaison
src.model.Tentative "1" o--> "1" src.model.LigneIndice
src.model.Tentative "1" o-> "1" src.model.ModeJeu


src.view.FenetreJeu

src.view.Classique ..> src.model.LigneIndice : <<utilises>>

src.view.Facile ..> src.model.LigneIndice : <<utilises>>

src.view.Numerique ..> src.model.LigneIndice : <<utilises>>

@enduml